name: AEM Hardcoded Update Test

on:
  workflow_dispatch:

jobs:
  test-aem-update:
    runs-on: ubuntu-latest

    env:
      AEM_URL: ${{ secrets.AEM_URL }}
      AEM_USERNAME: ${{ secrets.AEM_USERNAME }}
      AEM_PASSWORD: ${{ secrets.AEM_PASSWORD }}

    steps:
      - name: Update AEM Component with Hardcoded Data
        shell: bash
        run: |
          # This is the exact target node you specified.
          TARGET_URL="${AEM_URL}/content/martin-eds-playground/AI-Template-Dont-delete/AEMCP-100/jcr:content/root/section_0/block"

          # These are the hardcoded values, mimicking your "correct" screenshot.
          # Note how `modelFields` and `classes` are specified multiple times. This is the key part we are testing.
          FORM_DATA=$(cat <<'EOF'
          sling:resourceType=core/franklin/components/block/v1/block&filter=commerce-teaser&model=commerce-teaser&name=Commerce Teaser&product-description=<p>Product Description Test</p>&commerce-teaser-image=/content/dam/aco/hero.png&commerce-imageAlt=Image Alt Test&commerce-price=12â‚¬&commerce-title=Product Title Test&custom-button-label=Hi&custom-button-link=/content/asset_share_commonsdemo&custom-button-target=_blank&classes=download&classes=tertiary&modelFields=commerce-title&modelFields=commerce-price&modelFields=commerce-description&modelFields=commerce-image&modelFields=commerce-imageAlt&modelFields=custom-button-link&modelFields=custom-button-label&modelFields=custom-button-target&modelFields=classes
          EOF
          )
          
          # Remove newlines for the curl command
          CLEANED_FORM_DATA=$(echo $FORM_DATA | tr -d '\n')

          echo "--- Sending POST request to AEM ---"
          echo "Target URL: $TARGET_URL"
          echo "Form Data: $CLEANED_FORM_DATA"
          
          curl -v --fail-with-body "$TARGET_URL" \
            -u "${AEM_USERNAME}:${AEM_PASSWORD}" \
            -H "Content-Type: application/x-www-form-urlencoded; charset=UTF-8" \
            --data-raw "$CLEANED_FORM_DATA"
